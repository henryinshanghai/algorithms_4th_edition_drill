符号表 最简单的使用情况就是：
先用 连续的put()操作 来 构造一张符号表，以供用户 使用get()方法 来 执行指定key的查询。

许多应用程序 都会 把 符号表 看作一个 ① 可以方便进行查询 ② 并更新其中信息的 动态字典。

常见用例：
#1 电话黄页。
键：人名； 值：电话号码；
🐖 我们也可以 把 电话号码 作为键，把 人名 作为值。比如 在浏览器中 搜索自己的电话号码

#2 字典。
键：单词；值: 单词的含义。

#3 账户信息。
键：股票名称；值：当前价格；
金融机构 键：账户名称； 值：账户信息；
学校 键：学生学号; 值：学生的成绩。

#4 基因组学
键：A、C、T、G； 值：DNA中的四种核苷酸；
键：密码子； 值：氨基酸；
键：氨基酸序列； 值：蛋白质。

#5 实验数据
键：??? 值：???
只有有效地 组织和访问 这些实验数据，才能够 正确理解 它们的含义，而符号表 正是 关键的入手点。

#6 编译器
键：各种符号/变量名； 值：操作、内存地址；
随着程序的增长，符号表操作的性能 逐渐变成了 程序开发效率的瓶颈，因此我们 需要开发 新的数据结构与算法。

#7 文件系统
键：文件名； 值：文件内容的地址；
键：歌曲名称; 值：歌曲的位置。

#8 互联网DNS（域名系统）
键：URL字符串； 值：路由器 能够理解的IP地址；
作用：人类可以使用 便于记忆的域名，而机器也能够 高效地处理对应的数字。
🐖 全球互联网上 每秒钟进行的 符号表查询次数 是一个天文数字。所以 符号表的性能 很重要
另外，互联网上 每年都会新增 上百万台电脑和设备，因此 互联网路由器中的符号表 也需要能够 动态地适应它们。

尽管 已经涉及了 很多领域，但它们 只是用来说明 符号表应用的广泛程度。
每当 我们在使用一个名称 来 指代某种东西的时候，就使用到了 符号表。
比如你 用到了 计算机中的文件系统 或者 互联网，但是 在某个角落 肯定有一张符号表 在默默工作。
