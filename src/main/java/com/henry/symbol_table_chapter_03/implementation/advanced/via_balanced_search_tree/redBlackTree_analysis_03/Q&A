#Q1 感觉上，2-3树中的3-结点 等价于 红黑树中的红色左链接没有任何的实质依据。
为什么红黑树中不能拿存在红色右链接？以及4-结点呢？

回答：它们都是允许出现的。之所以在文章中只允许存在红色的左链接，是因为这样能够减少可能出现的情况。实现代码会少很多

#2 对于不同类型的结点(2-结点、3-结点、4-结点)，为什么不能在Node类中使用一个Key[] containedKeyArray 来表示它们？
答：这是一个好的想法，B-树其实就是这么实现的，使用这种方式可以使得一个结点中存储更多的键。
但因为2-3树中的结点存储键比较少，所以数组带来的额外开销相比之下就显得太高了。

#3 在分解对一个4-结点进行分解时，我们有时候会在rotateRight()中把右节点的颜色设为红色，并随即用flipColors()把它的颜色又变成黑色。
这不是纯纯多余吗？
答：的确，有时候我们会不必要地反复改变 中结点的颜色。
但是总体来看，“多余的几次颜色变换”的成本 与 “将所有方法的运行时间的增长数量级从线性级别提升到对数级别”的收益 不是一个数量级的(一本万利)。
当然 在“对性能有要求的应用”中，你可以将 rotateRight() 和 flipColors()的代码 在需要的地方展开(啥意思?) 来 消除那些额外的开销。
在删除算法中，我们仍旧会使用这两个方法。
对于“保证树的完美平衡”这个目标来说，这两个方法更加容易使用、理解和维护。