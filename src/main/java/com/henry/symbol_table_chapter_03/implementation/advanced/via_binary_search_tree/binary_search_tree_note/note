二叉查找树
是：一种逻辑上的数据结构；
作用：融合单向链表的快速插入特性 & 有序数组的快速查找特性；
特征：
    #1 二叉树中的每个结点 拥有两个链接；
    #2 二叉树是一种递归的结构，因此 二叉树中的根节点 就可以代表二叉树本身。

与二叉查找树相关的术语：
#1 二叉树由 结点 & 链接构成；
    结点的特征：
        #1 结点中所包含的链接可能为null 也可能指向其他结点；
        #2 任意一个结点只能存在一个父节点（根节点例外，它没有父节点）；
        #3 任意一个结点都只存在左右两个链接 - 链接指向自己的左子节点&右子节点；

#2 二叉树的递归定义：
    1 要么是一个空链接；
    2 要么是一个由左右两个链接的结点 - 其中每个链接都指向一棵独立的子二叉树;

#3 二叉查找树中的结点中，包含有一个键&一个值；

-- 二叉查找树的定义 --
BST（Binary Search Tree）是一棵二叉树（结构约束）。
其中每个结点都含有一个 Comparable的键 & 与键相关联的值，且任意一个（每个）结点的键 都要：
    #1 大于其左子树中任意节点的键；&&
    #2 小于其右子树中任意结点的键（对键的数值约束）。

-- 二叉查找树的图形表示 --
#1 把结点的键 写在表示结点的圆圈中；
    在描述时，使用结点的键 来 表示结点本身 - 比如说 结点A是结点E的左子结点；
#2 使用连接结点的线 来 表示二叉树中的链接；
#3 把 与键关联的值 写在结点圆圈的右边；
#4 空结点不画出 - 因此叶子节点的链接处会留空

约定：为了简化问题，突出要点，用例中 只是用单个字母作为结点的键。

