目标：研究红黑树的性质；
手段：检查它所对应的2-3树 & 对2-3树进行对应的分析；
结论#0：使用红黑树所实现的符号表，能够保证 操作的运行时间 为对数级别（除了范围查找操作）。

-- 结论#1 不管键是按照什么顺序插入到红黑树中的，从结构上看，红黑树都几乎是完美平衡的 --
数学上的结论：一棵大小为N的红黑树的高度不会超过2lgN.
证明：略

-- 结论#2：在一棵大小为N的红黑树中，根结点到任意结点的平均路径长度为~1.00lgN --
例证：略

-- 结论#3：查找比起BST更快 --
原因：因为红黑树的get()操作 #1 不会检查结点的颜色; & #2 红黑树的平衡性比BST要好很多

-- 结论#4：红黑树能够支持所有“与有序性相关的操作” --
原因：红黑树是二叉查找树 & 有序性相关的操作不涉及结点的颜色；

