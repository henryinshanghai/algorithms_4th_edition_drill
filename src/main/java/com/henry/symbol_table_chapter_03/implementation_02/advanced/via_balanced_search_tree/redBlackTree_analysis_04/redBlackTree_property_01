目标：研究 红黑树的性质；
手段：检查 它所对应的2-3树 & 对2-3树 进行对应的分析；
结论#0：”使用红黑树所实现“的符号表，能够保证 所有操作的运行时间 为对数级别（除了范围查找操作）。

-- 结论#1 不管键是 按照什么顺序 插入到红黑树中的，从结构上看，红黑树 都几乎是 完美平衡的 --
数学上的结论：一棵”大小为N的红黑树“的高度 不会超过 2lgN.
证明：略

-- 结论#2：在一棵”大小为N的红黑树“中，根结点 到 任意结点的平均路径长度为~1.00lgN --
例证：略

-- 结论#3：查找操作 比起BST更快 --
原因：因为红黑树的get()操作 #1 不会检查结点的颜色; #2 红黑树的平衡性比BST要好很多，因此查找路径更短

-- 结论#4：红黑树 能够支持 所有“与有序性相关的操作” --
原因：红黑树是BST，而”有序性相关的操作“ 不涉及 结点的颜色；

