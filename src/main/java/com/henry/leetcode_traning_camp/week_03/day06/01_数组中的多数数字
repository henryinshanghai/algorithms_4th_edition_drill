# 169 获取到数组中的多数元素(出现次数大于 n/2 的元素)
// 你可以假设数组是非空的，并且给定的数组总是存在多数元素。
//
//
//
// 示例 1:
//
// 输入: [3,2,3]
//输出: 3
//
// 示例 2:
//
// 输入: [2,2,1,1,1,2,2]
//输出: 2

---
题设与要求：
题设：
    1 给定一个数组,大小为n；
    2 数组中存在某个数字出现的次数大于n/2;
要求：找到这个出现次数大于 n/2 次的元素；

分析难点：有什么办法能够确定这个数字是什么？
手段1：对数组进行排序，既然这个数字出现的次数大于 n/2,所以排序后数组的中间位置一定是这个数字
手段2：直接统计各个元素数字在数组中出现的次数；
手段3：转化题意为“求数组中第 n/2+1 小的元素” aka 求第K大/第K小的元素
    如何求第k大/小的元素呢？
    手段：借助快速排序的方式————如果选择的切分元素刚好就是第k大/小的元素，这样甚至不需要对数组进行排序了
    如何进行快速排序呢？
        先调用partition()方法来摆放一个切分元素；
        再判断该切分元素与第(n/2)位置的关系，进行下一次规模更小的切分操作
    注：这种方式需要能够熟练地写出切分方法 partition()












