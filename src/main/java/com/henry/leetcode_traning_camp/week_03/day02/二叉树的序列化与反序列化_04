# 297 二叉树的序列化与反序列化

//序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方
//式重构得到原数据。
//
// 请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串
//反序列化为原始的树结构。
//
// 示例:
//
// 你可以将以下二叉树：
//
//    1
//   / \
//  2   3
//     / \
//    4   5
//
//序列化为 "[1,2,3,null,null,4,5]"
//
// 提示: 这与 LeetCode 目前使用的方式一致，详情请参阅 LeetCode 序列化二叉树的格式。你并非必须采取这种方式，你也可以采用其他的方法解决这
//个问题。
//
// 说明: 不要使用类的成员 / 全局 / 静态变量来存储状态，你的序列化和反序列化算法应该是无状态的。

------
题设与要求：
题设：给定一个二叉树；
要求：实现序列化该二叉树的操作 & 实现反序列化次二叉树的操作；

分析难点：
1 什么叫做序列化/反序列化？
把数据结构/对象转化为二进制数据的过程就叫做的序列化。相反的过程叫做反序列化

2 如何实现二叉树的序列化/反序列化？
手段1：递归；
递归的可行性分析：
    大的问题：对二叉树进行序列化；
    更小的问题：对二叉树的左右子树进行序列化；
    更小的问题能够帮助解决大的问题吗？
        这里序列化的方式其实是树中节点的一种遍历结果。只要都采用相同的方式遍历，子树的遍历结果就可以用于整棵树的序列化
    所以递归可行


代码：
