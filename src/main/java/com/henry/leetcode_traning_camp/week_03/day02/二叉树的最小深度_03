# 111 二叉树的最小深度
//给定一个二叉树，找出其最小深度。
//
// 最小深度是从根节点到最近叶子节点的最短路径上的节点数量。
//
// 说明: 叶子节点是指没有子节点的节点。
//
// 示例:
//
// 给定二叉树 [3,9,20,null,null,15,7],
//
//     3
//   / \
//  9  20
//    /  \
//   15   7
//
// 返回它的最小深度 2.

------
题设与要求：
题设：给定一个二叉树；
要求：计算出该二叉树的最小深度；

分析难点 & 提出解决手段
难点1: 什么是二叉树的深度？
答：从根节点到叶子节点的路径上的节点个数

难点2：如何求出二叉树的最小深度？
答：min_depth = Math.min(left_min_depth, right_min_depth) + 1

妥妥地又是使用递归，但是这里有一个陷阱。
如果一侧的子树为null时，树的最小深度并不是1（因为左子树中不存在叶子节点）
aka 这里的计算公式需要进行分类讨论

当左子树为null时;
当右子树为null时；
当左右子树都不为null时；