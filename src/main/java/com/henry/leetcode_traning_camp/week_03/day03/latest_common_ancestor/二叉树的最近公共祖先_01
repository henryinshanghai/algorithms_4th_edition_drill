# 236
给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。
百度百科中最近公共祖先的定义为：
“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足：
    #1 x 是 p、q 的祖先; 且
    #2 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”

说明:
    #1 所有节点的值都是唯一的。
    #2 p、q 为不同节点且均存在于给定的二叉树中。

===
题设与要求：
题设：
    #1 给定一个二叉树；
    #2 给定树中的两个指定节点p、q；
    补充：
    #3 所有节点的值都是唯一的。
    #4 p、q 为不同节点且均存在于给定的二叉树中。
    #5 一个节点可以是自己的最近公共祖先
要求：
    找出给定节点的最近公共祖先；

===
分析难点：
1 什么是节点的最近公共祖先？
答：满足 #1 x 是 p、q 的祖先 且 #2 x 的深度尽可能大（一个节点也可以是它自己的祖先）；

2 如何找出两个节点的最近公共祖先？
    #1 公共祖先：沿着二叉树 从下往上找，必然能找见 两个结点的公共祖先结点；
    #2 最近：在从下往上回溯的过程中，第一个遇到的“公共祖先” 就是最近公共祖先；

===
策略：在子树中，找到什么结点 就返回什么结点 给上一级；

对于一棵子树：
    node1
node2   node3

#1 结点P与结点Q 都不存在于子树中，则：返回null给上一级
#2 结点P与结点Q 有一个存在于子树中，则：返回找到的结点P 或者 结点Q
    nodeP/nodeQ
node2       node3

        node1
nodeP/nodeQ  node3

    node1
node2   nodeP/nodeQ


#3 结点P与结点Q 都存在于子树中，则：返回结点P与结点Q的最近公共祖先结点 给上一级
    nodeP
nodeQ node3

    nodeP
node2  nodeQ

    node1
nodeP  nodeQ

