# 590

题设与要求：
//给定一个 N 叉树，返回其节点值的后序遍历。

分析难点 & 提出解决方案/手段：
难点：如何以后序遍历要求的次序访问到N叉树中的每一个节点？
解决手段1 递归（关注功能，不关注实现）
解决手段2 借助数据结构 + 迭代

---
递归解法SOP：
1 递归方法的作用；
2 跳出递归的终结条件；
3 本机递归要做的事情：
    左子树（递归调用） - 右子树（递归调用） - 根节点（加入到res列表中）

---
迭代 + 数据结构的解法SOP：
1 准备一个deque对象，用来存储遍历到的节点；
2 再准备一个deque对象，用来按照预期顺序存储节点集合；【需要巧妙地使用Deque的APIs————这也是为什么Deque比起Stack用得更多】
3 准备一个循环，一顿操作猛如虎，最终2中的deque对象按照预期的顺序存储了所有的节点

SOP明确：
    1 准备deque与list；
        deque中预期的元素顺序：根 -> 左 -> 右
        list中预期的元素顺序：左 <- 右 <- 根
    2 把root入队deque；
    3 准备一个循环；
        /* 3-1 从队列中取出队尾元素，并添加到准备的栈中 */
        /* 3-2 把1中取出元素的子节点从左到右依次入队————这样在把元素存入栈中时，栈中元素的顺序就是预期的后序遍历结果 */

todo 找一个youtube上的讲解视频看看，加深理解，练习听力