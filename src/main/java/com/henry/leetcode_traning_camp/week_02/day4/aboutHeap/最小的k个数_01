# 40 最小的k个数

题设与要求：
//输入整数数组 arr ，找出其中最小的 k 个数。
例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。

分析难点 & 提出解决手段
分析难点：如何在数组中找到最小的k个数字？
解决手段1：先对数组进行排序，然后从排序后的数组中取出前k个元素；
排序的最优时间复杂度为：O(NlogN) 归并排序

手段2：
    不需要对数组进行排序，只需要借助快速排序的原理。找到最小的k个数字

    SOP:
        1 从数组中获取到最小的k个数字:getLeastNumbers();
        2 使用数组中最小的k个数字组成新数组并返回:quickSortSearch();
            这是一个递归方法
        3 排定数组中的一个元素，并返回所排定元素的下标：partition();
            quickSortSearch()的核心步骤

手段3：遍历数组中的元素，并使用这些元素维护一个大小为k的堆(类似于树的结构)。然后输出堆中的元素值即可
    为了找到最小的k个数，需要什么样的堆？
    原理：使用数组元素来创建一个堆对象————关于堆只能确定一点：堆顶元素是堆中所有元素的最小值/最大值；

    任务：使用堆来保存数组中最小的k个元素；
    手段：
        1 创建一个最大堆（这样堆顶元素就是堆中元素的最大值）；
        2 遍历数组元素，然后调用insert()方法把数组元素依次添加到堆对象中；
        3 当堆对象中的元素已经有k个，而此时又要添加新的数组元素时,则：
            调用delete()方法来删除堆顶元素————由于堆是最大堆，因此每次都会把当前子数组中的最大值删掉
            aka 最终留下来的元素就是数组中最小的k个元素

参考：https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/solution/3chong-jie-fa-miao-sha-topkkuai-pai-dui-er-cha-sou/

---
国际站的解法参考：
略过~
