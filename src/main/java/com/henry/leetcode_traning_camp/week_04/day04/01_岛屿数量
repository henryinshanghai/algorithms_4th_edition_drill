 # 200 求出二维矩阵中岛屿的数量

 //给你一个由 '1'（陆地）和 '0'（水）组成的的二维网格，请你计算网格中岛屿的数量。
 //
 // 岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。
 //
 // 此外，你可以假设该网格的四条边均被水包围。

 //输入：grid = [
 //  ["1","1","0","0","0"],
 //  ["1","1","0","0","0"],
 //  ["0","0","1","0","0"],
 //  ["0","0","0","1","1"]
 //]
 //输出：3

 // m == grid.length
 // n == grid[i].length
 // 1 <= m, n <= 300
 // grid[i][j] 的值为 '0' 或 '1'

------
题设与要求：
题设：
    1 给定特定的二维矩阵/网格；
    2 矩阵中所有的元素要么是0（水），要么是1（陆地）；
    3 矩阵四周被水包围；
    4 岛屿由水平方向&竖直方向上的相邻陆地连接而成；
要求：
    1 获取二维矩阵中的岛屿数量；

分析难点 & 提出解决方案：
难点1：如何能够找到矩阵中的岛屿？
手段：遍历二维矩阵，当遇到1的时候说明有陆地出现————陆地就是岛屿的一部分

难点2：如何能够根据陆地的相邻情况来统计岛屿的数量呢？
手段：
    1 使用DFS的方式在二维矩阵中遍历每一个网格；
    2 从当前网格向上下左右四个方向扩展（扩展过程中排除掉已经扩展过的网格）；
    3 如果网格中出现了陆地，则将之记录为岛屿的一部分；

参考：https://www.youtube.com/watch?v=Ft0AmONMYyM
山景城一姐



