# 127 从原始单词 beginWord 逐步变化到 目标单词 endWord

每次转换只能改变一个字母。
// 转换过程中的中间单词必须是字典中的单词。
//
//
// 说明:
//
//
// 如果不存在这样的转换序列，返回 0。
// 所有单词具有相同的长度。
// 所有单词只由小写字母组成。
// 字典中不存在重复的单词。
// 你可以假设 beginWord 和 endWord 是非空的，且二者不相同。

---
题设与要求：
题设：
    1 给定一个beginWord、一个endWord与一个tempWordList；
    2 单词每次都只能变化一个字母；
    3 beginWord与endWord都是非空的————这就省去了代码中对特殊情况的处理；
    4 所有单词具有相同的长度————这样才能保证在只变化一个字母的情况下，能够最终变化成为endWOrd
    5 字典中不存在重复的单词

要求：
    1 找到从 beginWord 到 endWord 的最短转换序列的长度；
    2 如果不存在这样的转换序列，则返回0

分析难点 & 提出解决方案：
难点1：从beginWord开始，如何能够列举出变化某一个位置的字符后，变化后的所有可能结果呢？
手段：
    1 把beginWord转化成为一个字符数组，然后遍历数组中的每一个字符；
    2 再使用26个字母来尝试替换这个字符，这样就能得到 beginWord所有可能的变化结果；
    追问：使用26个字母替换字符，肯定会有一种情况是“与beginWord相同的字符串” 这种情况需不需要过滤掉呢？
    TODO 从最终代码上看，应该是不需要的
    tempWord 与 beginWord相同这个事实是不重要的，重要的是 tempWord是否出现在了字典中
    我们需要避免一个已经出现在字典中的tempWord，再进行单词变化时，又变化成自己的情况————这会导致序列的死循环；
    手段：把找到的出现在字典中的tempWord从字典中移除

难点2：对于列举出的每一种变化结果，如何判断它是不是合法的（在字典中）
手段：把字典列表中的字符串集合添加到一个Set中；

难点3：两个不同的tempWord，可能会得到相同的合法变化结果，这有可能导致序列中出现环吗？
答：有可能，所以在某个tempWord匹配到字典中的单词时，就需要把单词从字典中移除
