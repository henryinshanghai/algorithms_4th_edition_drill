# 860
//在柠檬水摊上，每一杯柠檬水的售价为 5 美元。
//
// 顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。
//
// 每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 5 美元。
//
// 注意，一开始你手头没有任何零钱。
//
// 如果你能给每位顾客正确找零，返回 true ，否则返回 false 。

// 示例 4：
//
// 输入：[5,5,10,10,20]
//输出：false
//解释：
//前 2 位顾客那里，我们按顺序收取 2 张 5 美元的钞票。
//对于接下来的 2 位顾客，我们收取一张 10 美元的钞票，然后返还 5 美元。
//对于最后一位顾客，我们无法退回 15 美元，因为我们现在只有两张 10 美元的钞票。
//由于不是每位顾客都得到了正确的找零，所以答案是 false。


// 提示：
//
//
// 0 <= bills.length <= 10000
// bills[i] 不是 5 就是 10 或是 20

题设与要求：
题设：
    1 柠檬水5美元一杯；
    2 开始时手上没有任何的bills；
    3 客户按照特定的顺序付钱；
要求：
    判断能不能对每一个客户都正确地找零钱；

难点分析 & 解决方案：
    难点：如何判断当前情况下是否能够正确地找零钱？
    这主要取决于两点：
        1 顾客给了多少钱？
        2 手上有哪些面额的钞票可供找零？

    解决方案：
        列举不同的case，分类讨论
        当前手上有 M张5块的钞票、N张10块的钞票。而顾客可能会给一张5元、10元、20元的钞票

思路总结：
    列举不同的case，根据每个不同的case，推测得到的结果。
    如果不容易成功，就列举失败的情况

代码：
