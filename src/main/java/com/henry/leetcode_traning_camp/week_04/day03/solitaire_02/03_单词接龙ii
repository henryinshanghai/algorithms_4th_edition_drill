#126

给定两个单词（beginWord 和 endWord）和一个字典 wordList，找出所有从 beginWord 到 endWord 的最短转换序列。

规则如下：
#1 每次转换只能改变一个字母。
#2 转换过程中的中间单词必须是字典中的单词。

说明:
    #1 如果不存在这样的转换序列，返回一个空列表。
    #2 所有单词具有相同的长度。
    #3 所有单词只由小写字母组成。
    #4 字典中不存在重复的单词。
你可以假设 beginWord 和 endWord 是非空的，且二者不相同。

===
示例 1:

输入:
    beginWord = "hit",
    endWord = "cog",
    wordList = ["hot","dot","dog","lot","log","cog"]

输出:
    [
      ["hit","hot","dot","dog","cog"],
      ["hit","hot","lot","log","cog"]
    ]

===
题设与要求：
题设：
    1 给定两个指定的单词和一个单词列表；
    2 wordList中不存在重复的单词；
    3 所有单词（beginWord、endWord与wordList中的单词）长度都相同，并且是由小写字母组成的；
    4 beginWord与endWord非空，并且两者不相同；

要求：
    1 找出所有的 从 beginWord到endWord的最短转换路径；
    2 如果不存在这样的路径，就返回一个空列表；

转换规则：
    1 每次转换只能改变一个字母。
    2 转换过程中的中间单词必须是字典中的单词。

===
分析难点 & 提出解决方案
难点1：如果从beginWord开始，向endWord进行转换？
手段：
    1 把beginWord转化成为一个字符数组，然后使用 a-z来逐个替换每一个位置上的字符；
    2 判断得到的新字符串是不是endWord 或者 是不是在wordList中

难点2：如何在转换的过程中记录序列中的当前字符串？
手段：在遍历树的过程中，使用一个列表记录（添加与删除）整个序列的元素；

难点3：如何确定得到的路径是不是最短转换路径？
手段：？？？

难点4：得到一条可行的转换路径后，如何能够继续尝试其他可能的转换路径？
手段：？？？

口述算法：
    xxx