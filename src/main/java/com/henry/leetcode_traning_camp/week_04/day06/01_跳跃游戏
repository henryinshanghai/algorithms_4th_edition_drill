# 55 跳跃游戏

//给定一个非负整数数组，你最初位于数组的第一个位置。
//
// 数组中的每个元素代表你在该位置可以跳跃的最大长度。
//
// 判断你是否能够到达最后一个位置。

// 示例 1:
//
// 输入: [2,3,1,1,4]
//输出: true
//解释: 我们可以先跳 1 步，从位置 0 到达 位置 1, 然后再从位置 1 跳 3 步到达最后一个位置。

======
题设与要求：
题设：
    1 数组中的元素都是非负整数；
    2 你的初始位置是在数组的第一个位置 aka 下标为0；
    3 数组元素的值表示你在此位置能够跳跃的最大长度；
要求：
    判断你能不能跳跃到终点；


分析难点 & 提出解决方案：
难点1：如何才能到达终点？
    可以从终点往前捯饬，不断更新“当前需要到达的位置”；
        这是一种归纳法的思路
    当“当前需要到达的位置”确认可达时，我们就可以顺推出“终点是可达的”。
        什么样的位置是“确认可达”的呢？
        答：起点 aka 数组下标为0的位置

难点2：到达终点可能有N种跳法，怎么才能验证“能否到达终点”？
    正向思考会因为存在多个分支情况而跳进思索陷阱😵

思路：
    准备一个循环，从后往前地遍历数组；
    判断从当前位置是否能够到达“终点位置”：
        如果可以，则：更新“终点位置”；
        如果不行，则：继续循环，尝试其他位置是否能够“到达终点”
    这里循环其实和递归做了几乎一样的事情，但感觉上循环的代码更加可控一些

代码：
