# 153 寻找旋转排序数组中的最小值

//假设按照升序排序的数组在预先未知的某个点上进行了旋转。例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] 。
//
// 请找出其中最小的元素。

// 示例 1：
//
//
//输入：nums = [3,4,5,1,2]
//输出：1

// nums 中的所有整数都是 唯一 的
// nums 原来是一个升序排序的数组，但在预先未知的某个点上进行了旋转

======
题设与要求：
题设：
    1 给定的数组是一个“在某个节点上进行了旋转”的有序数组；
    2 给定的数组中的每一个元素都是唯一的；
    3 给定数组的原始状态是一个升序数组；
    4 数组旋转的节点是未知的
要求：
    找到给定数组中的最小元素；

分析难点 & 提出解决方案
难点1：在某个节点上旋转后的数组到底是什么样的？它有什么可以利用的特征？
答：旋转后的数组是两段有序数字序列的连续组合；
可以利用的特征：
    1 有序数字序列；
    2 连续；

难点2：如何能够在两段有序数字序列中找到最小值？
答：既然原始数组是升序的，旋转后的两个数字序列也都是升序的 所以就只需要找到第二个序列的第一个元素就好

难点3：如何能够找到降序数字对的第二个元素？
答：二分查找？？？
参考：江景城一姐的代码 findPeakElement
原理：比较当前中间位置的元素 与 中间位置下一个位置的元素是不是逆序关系，
    如果是，说明找到了逆序对。则：返回逆序对中的第二个元素
    如果不是，使用二分法来缩小查找区间

