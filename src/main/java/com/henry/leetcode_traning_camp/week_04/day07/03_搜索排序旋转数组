# 33 搜索排序旋转数组中是否存在指定的target

//给你一个整数数组 nums ，和一个整数 target 。
//
// 该整数数组原本是按升序排列，但输入时在预先未知的某个点上进行了旋转。（例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2]
// ）。
//
// 请你在数组中搜索 target ，如果数组中存在这个目标值，则返回它的索引，否则返回 -1 。

//输入：nums = [4,5,6,7,0,1,2], target = 0
//输出：4

======
题设与要求
题设：
    1 给定一个整数数组；
    2 这个数组的元素原本按照升序排列，但是现在已经在某个节点上进行了旋转；
    3 nums 中的每个值都 独一无二
    4 nums 肯定会在某个点上旋转

要求：
    1 在数组中搜索指定的值target，找到的话，返回下标值。没找到返回-1
    2 要求查找操作的时间复杂度为O(logN)；


分析难点 & 提出解决方案
难点1：如何能够在O(logN)的时间复杂度实现查找？
手段：二分查找；

二分查找的三个条件：
1 有序；
2 有限范围；
3 可以通过下标访问；

现在的数组是无序的，怎么办？
答：虽然整个数组是无序的，但是如果人为分成两个部分的话。每个部分都是局部有序的————在任意一个有序的序列中，都可以使用二分查找

难点2：如何人为地找到两个升序的区间呢？
手段：找到数组中相邻而降序的元素对。它们就是两个区间的交界

难点3：区分出两个升序区间后，如何确定应该在那个区间进行二分查找呢？
手段：比较 target 与 升序区间的左右边界，以便在正确的区间中进行查找

思路：
    1 find index of peak element—— this is the left item of boundary
    2 Apply Binary Search on the subarray

代码参考：https://www.youtube.com/watch?v=IQyJX5ddEx0&pbjreload=101
