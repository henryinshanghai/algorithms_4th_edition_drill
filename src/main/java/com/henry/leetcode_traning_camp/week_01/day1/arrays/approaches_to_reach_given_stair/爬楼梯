# 70

题目原文：
    假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
    每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
🐖：
    题目只是要求给出一共会有多少种方案，而没有要求给出具体的方案是什么 - 这是两个完全不同的问题
分析：
    什么时候需要进行计算？
    计算需要进行多少次？

---
2020/09/22
// 0 找到正确的子序列： 1, 2, 3, 5, 8...
// 1 列举基本情况，也就是不需要进行任何计算的情况
if(n <= 2 ) return n;

/* 2 n更大时就需要计算得到结果 */
// 2-1 初始化最开始的三项
int f1 = 1, f2 = 2, f3 = 3;

// 2-2 准备一个循环，用于更新这三个数字 以得到第n项的数值
for(int i = 2; i < n; i++){ // i只用于控制循环的次数； 在循环中，更新当前区间的3个数值
    // 更新顺序：f3、f1、f2
    f3 = f1 + f2;
    f1 = f2;
    f2 = f3;
}

return f3;