# 62 从左上角走到右下角的不同路径走法统计

一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。
机器人 每次只能向下 或者 向右移动一步。
机器人 试图达到 网格的右下角（在下图中标记为 “Finish” ）。

问总共有多少条不同的路径？

===
思路1：分治 + 记忆化搜索；
思路2：使用自底向上的动态规划/递推
    递推公式：
        opt[i,j] = opt[i+1, j] + opt[i, j+1]
    完整逻辑：
        if (a[i, j] == '空地') {
            opt[i,j] = opt[i+1, j] + opt[i, j+1]
        } else { // 为一个障碍物...
            opt[i, j] = 0; // 从障碍物走到End方块的走法有0种
        }

===
参考：https://www.youtube.com/watch?v=6qMFjFC9YSc
原始问题：从左上角方格走到右下角方格；
DP的方案：拆解子问题到每一个方格中；

代码：
    /* 〇 准备一个二维数组，用来作为dpTable */
    /* Ⅰ 初始化dpTable中的第一行与第一列元素的值为1————为递推求出其他元素的值做准备
            dpTable[i][j]的含义/状态定义：从左上角到达当前位置(i, j)一共有多少种走法
            */
    /* Ⅲ 按照题设规则进行递推，求出dpTable[]中其他元素的值 */
    /* Ⅳ 返回dpTable[]中满足题意得元素值 */

