动态规划的关键点

1 最优子结构 opt[n] = best_of(opt[n-1], opt[n-2]...)
2 定义并存储中间状态:opt[i];
    分治的做法不需要这一步，因为状态已经被放在方法参数中
3 递推公式 aka 状态转移方程/DP方程
    对于Fib：opt[n] = opt[n-1] + opt[n-2]
    对于二位路径的计数问题：
        1 opt[i, j] = opt[i+1][j] + opt[i][j+1]
        2 另需要判断a[i,j]是否为空地

有时候递推公式会是一个Max() 或者 Min()

面试时，最难的是定义状态（step2）