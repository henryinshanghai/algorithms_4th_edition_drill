# 70 爬到第N级楼梯的走法

假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

示例 1：
输入：n = 2
输出：2
解释：有两种方法可以爬到楼顶。
    #1. 1 阶 + 1 阶
    #2. 2 阶

示例 2：

输入：n = 3
输出：3
解释：有三种方法可以爬到楼顶。
    #1. 1 阶 + 1 阶 + 1 阶
    #2. 1 阶 + 2 阶
    #3. 2 阶 + 1 阶

intuition：直觉

===
1 分治 + 记忆化缓存； top-down
分治：把大问题拆解成为小问题；
记忆化缓存：避免对同样规模的小问题进行重复的计算；

整个计算的过程，就是：
    1 生成递归树；
    2 从递归树的叶子节点(aka 递归的触底返回条件)返回
的过程；

===
动态规划 bottom-up

思路：先计算小问题的结果，再用小问题的结果累计出大问题的结果；
特征：
    1 避免了重复计算；
    2 需要列举出一些个初始元素；
    3 需要一个从前往后的递推公式