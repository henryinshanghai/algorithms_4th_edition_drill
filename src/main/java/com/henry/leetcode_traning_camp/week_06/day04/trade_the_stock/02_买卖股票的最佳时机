# 121 在已知单支股票涨跌的情况下，如何买卖能够盈利最大？

给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。
如果你 最多只允许完成 一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。

注意：你不能在买入股票前卖出股票。

示例 1:
输入: [7,1,5,3,6,4]
输出: 5
解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。

======
题设与要求
题设：
    1 给定一个数组arr arr[i]表示的是股票在第i天的价格；
    2 最多只允许完成一笔交易（即买入和卖出一支股票一次）；
        aka 不能连续进行交易。只能有一次买入行为 & 卖出行为；
    3 只有在持有股票的时候，才能出售股票；

要求：计算出你所能够获得到的最大利润；

===
分析难点 & 提出解决方案
难点1：什么叫做只能完成一笔交易？
答：不能连续进行交易。只能有一次买入行为 & 卖出行为；

难点2：如何能够获得到最大利润？
答：在时间顺序正确的情况下，价格最低点买入，然后在之后的价格最高点卖出即可。
RE-CORRECT：在当前的价格低点买入，然后在随后的价格高点卖出； this is ongoing process rather than 一锤子买卖

难点3：如何能够找到价格最低点 以及 这个最低点之后的价格最高点呢？
答：this idea is wrong.
比如 数组： {4, 6, 1, 2}
如果一定要在1买入，2卖出。利润就只是1.这并不是最大利润

思路参考：https://www.youtube.com/watch?v=mj7N8pLCJ6w

===
代码：
    /* Ⅰ 准备一个max变量并初始化    用于记录(track)当前赚取的最大利润 */
    /* Ⅱ 准备一个min变量并初始化    用于记录当前所查找到的最小股价 */
    /* Ⅲ 遍历股票价格序列     在循环过程中，持续更新max */
        // 尝试计算今天卖出所能赚取的利润：当天的股票价格 - 股票的买入价格
        // 1 记录并更新当前所遇到的最低价格
        // 2 尝试交易，并在交易后更新最大利润max
    // Ⅳ 返回计算得到的最大利润max