# 120 求三角形中的最小路径和

给定一个三角形，找出自顶向下的最小路径和。
规则：每一步只能移动到 “下一行中相邻的结点”上。

相邻的结点 在这里指的是：
下标 与“上一层结点下标”相同 或者
等于“(上一层结点下标 + 1)” 的两个结点。

例如，给定三角形：
[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]

自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 = 11）。

如果你可以只使用 O(n) 的额外空间（n 为三角形的总行数）来解决这个问题，
那么你的算法会很加分。

===
题设与要求：
题设：
    1 给定一个由数字组成的三角形；
    2 路径中的下一个节点只能是三角形中下一行中相邻的节点；
    3 相邻的节点指的是，节点的坐标与上一层的节点坐标相同 或者 坐标+1

要求：
    找到三角形中sum值最小的数值路径

===
分析难点 & 提出解决方案
难点1：如何能够形成一条路径？
手段：在每一层按照规则选择其中的一个元素即可

难点2：如何能够保证形成的路径的sum是最小的？
手段：既然路径的形成过程是一个逐步扩展的过程，我们可以尝试使用贪心算法
aka 在每次选择元素时，都选择当前所能够找到的最小元素；
这种做法并不可行，因为当前选择了较小元素，并不能保证在此元素之后选择的其他元素也比较小

同样地，一个逐步扩展的过程。为了在这样一个过程中实现一个目标，可以使用分治的思路
分治的N多具体实现：递归、回溯、动态规划；
这里计算sum的过程可以逐步递推吗？ 可以的，所以使用动态规划

===
具体实现手段1：从上往下地扩展出路径；
特征：有一个限制条件/题设不好用————选择下一个元素时，只能选择与当前元素相邻的元素；
解决手段：把三角形处理成为一个二维矩阵，然后使用元素在二维数组中的位置来索引到可以选择的元素；
特性：
    在扩展的过程中需要记录两件事：1 已经使用过的元素的位置； 2 下一列中可以选择的元素的位置
    这会导致较大的空间复杂度

深情疑问：能不能不存储行的信息，而只存储列的信息呢？
可以的，手段：从下往上地来扩展路径；
rows /cols       0 1 2 3
0                   2
1                  3 4
2                 6 5 7
3                4 1 8 3 👆
👉      dpTable[0 0 0 0 0]

事实：可以把三角形放在一个n * n的正方形中。比如上面的三角形就可以在 4 * 4的方形中
这里就只需要一个一维数组作为存储空间

这就是个中等难度的题目，战略上要藐视敌人。
参考：https://leetcode.cn/problems/triangle/solutions/329394/di-gui-ji-yi-hua-dp-bi-xu-miao-dong-by-sweetiee/