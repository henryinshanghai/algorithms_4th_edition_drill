# 198 打家劫舍

你是一个专业的小偷，计划偷窃沿街的房屋。
每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是
相邻的房屋装有相互连通的防盗系统，
如果两间相邻的房屋 在同一晚上被小偷闯入，系统会自动报警。

给定一个代表每个房屋存放金额的非负整数数组，计算你
不触动警报装置的情况下，一夜之内能够偷窃到的最高金额。


示例 1：

输入：[1,2,3,1]
输出：4
解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。
偷窃到的最高金额 = 1 + 3 = 4 。


===
题设与要求
题设：
    1 给定一个表示房子价值的序列；
    2 给定了抢劫房子的规则：不能连续抢劫相邻的两所房子；
要求：
    求出从给定的房子序列中所能抢劫的最大金额；

===
分析难点 & 提出解决方案
难点1：如何根据规则来确定自己的抢劫方案？
分析：如果只是比较 抢劫奇数位置的房间 ＯＲ　抢劫偶数位置的房间，这样其实可能会遗漏掉最佳的抢劫方案
示例：[1,2,3,1,1,100]
手段：尝试使用DP的方式，简化问题的规模

难点2：在遍历给定的房子价值数组时，如何判断当前房子能不能/应不应该抢劫？
手段：分类讨论——1 如果抢劫当前房子如何计算当前收益？ 2 如果不抢劫当前房子，如何计算当前收益

===
思路：
    dpTable[i]:以当前房子(第i-th)作为结束位置的房子序列中，所能抢到的最大金额是多少；
    这里的下标有点子混乱了
代码：
    /* 〇 对给定的房子价值序列进行判空  */
    /* Ⅰ/template1 准备一个比房子价值序列大一个位置的数组 作为dpTable */
    /* Ⅱ/template2 准备dpTable的前两个初始元素 用作为递推的基础 */
    /* Ⅲ 遍历房子价值的序列，并进行递推 */
    /* Ⅳ/template4 返回dpTable[]数组中满足题设条件的项 */