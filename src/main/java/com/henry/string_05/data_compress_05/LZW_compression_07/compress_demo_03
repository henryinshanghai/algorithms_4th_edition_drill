===
LZW压缩示例

下表所示的是 LZW算法压缩样例输入 A B R A C A D' A B R A B R A B R A的详细过程。
对于前7个字符，“输入 在符号表中所能匹配的最长前缀”仅为1个字符。因此：
#1 输出 这些字符所对应的编码，并
#2 把编码81到87 逐一绑定到 所产生的7个“由两个字符构成的字符串”；

然后我们发现 AB匹配了 输入的前缀，所以 我们输出81，并把ABR添加到符号表中；
接着是RA，所以 我们输出83，并添加RAB；
接着是BR，所以 我们输出82，并添加BRA；
接着是ABR，所以 我们输出88，并添加ABRA；
最后只剩下一个A，所以我们输出41.

🐖 这个过程为什么是这样进行的，参考“压缩数据的算法”👆

输入为17个7位的ASCII字符，总共是119位比特；
输出为13个8位的编码，总共是104位比特；
104/119=87%, 只使用了87%的空间。