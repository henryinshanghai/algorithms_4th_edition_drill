===
示例👇

Ⅰ 对于前7个编码，只需要 在符号表中 查找并输出 相应的字符，
Ⅱ 然后 多读取一个字符，并在符号表中添加 一个“两个字符的字符串条目”。
这与之前是相同的👆

然后读到81（输出AB，并向符号表中添加ABR），
然后是83（输出RA并添加RAB），
82（输出BR，并添加BRA），
88（输出ABR，并添加RAB），
82（输出BR，并添加BRA），
88（输出ABR，并添加ABRA），
然后只剩下41.

最终会遇到文件结束的标记80（因此输出A）。

这个过程结束后，就已经：
Ⅰ 如期写出了 原始的输入，并且
Ⅱ 构造了一张 和压缩时相同的符号表（只是键和值的位置 对调了）。

注意，我们也可以使用 一个简单的字符串数组(index/key -> item/value) 来 表示符号表（数组的索引就是编码）。

输入 41 42 52 41 43 41 44 81  83  82  88  41 80

反编译表 // 得到反编译表的过程比较繁琐
键       值
81      AB
...
8B      ABRA

输出 A B R A C A D AB RA  BR  ABR A