霍夫曼压缩算法流行的一个原因是，不仅对于“自然语言文本”，它对 各种类型的文件 都有效果。

我们在编写方法的代码时 十分小心，来 保证它能够正确处理 8位字符所可能表示的任意8位值。

换句话说，我们可以 把它应用于任何字节流。
对于我们在本节中讨论过的 其他几种类型的文件（如图显示了这些例子），
它们说明了 霍夫曼压缩 与 定长编码、游程编码相比，仍旧十分具有竞争力。
虽然这些算法 是为了 某些类型的文件 而专门设计的。

理解霍夫曼编码 在这些领域的优越性 是非常有帮助的。

对于基因组数据，霍夫曼压缩 实际上发现了 双位编码。
因为4种字符“出现频率”基本相同，因此 霍夫曼编码树 是平衡的 - 每个字符分配到的 都是一个 两位的编码。

在游程编码的示例中，0 0 0 0 0 0 0 0 和 1 1 1 1 1 1 1 1 都可能是 出现最频繁的字符，
因此 它们的编码 可能只有2~3位，这样 就能够大幅度地 压缩输入数据了。

《用例执行的结果》
使用霍夫曼编码 压缩和展开 基因组和位图数据👆