霍夫曼压缩算法 流行的 一个原因是，不仅 对于 “自然语言文本”，它 对 各种类型的文件 都 有效果。

我们 在 编写方法的代码 时 十分小心，来 保证它 能够 正确处理 8位字符 所可能表示的 任意8位值。

换句话说，我们可以 把 它 应用于 任何字节流。
对于 我们在本节中 讨论过的 其他几种类型的文件（如图 显示了 这些例子），
它们 说明了 霍夫曼压缩 与 定长编码、游程编码 相比，仍旧 十分具有 竞争力。
虽然 这些算法 是为了 某些类型的文件 而 专门设计的。

理解 霍夫曼编码 在 这些领域的优越性 是 非常有帮助的。

对于 基因组数据，霍夫曼压缩 实际上 发现了 双位编码。
因为 4种字符“出现频率” 基本相同，因此 霍夫曼编码树 是平衡的 - 每个字符 分配到的 都是一个 两位的编码。

在 游程编码的示例 中，0 0 0 0 0 0 0 0 和 1 1 1 1 1 1 1 1 都可能是 出现 最频繁的字符，
因此 它们的编码 可能只有2~3位，这样 就能够大幅度地 压缩输入数据了。

《用例执行的结果》
使用 霍夫曼编码 压缩和展开 基因组 和 位图数据👆