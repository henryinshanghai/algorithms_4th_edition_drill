===
霍夫曼压缩

我们现在来学习一种能够大幅压缩“自然语言文件”（以及许多其他类型文件）空间的数据压缩技术。

它的主要思想 放弃文本文件的普通保存方式：
不再 使用7位或者8位二进制数 来 表示每一个字符，
而是
    #1 使用 较少的比特 来 表示出现频率高的字符；
    #2 而使用 较多的比特 来 表示出现频率低的字符。

为了说明这个概念，我们先来看一个简单的示例。
假设需要 把字符串A B R A C A D A B R A !进行编码。
使用 7位的ASCII字符编码，我们可以得到 如下比特字符串👇
略

现在想要把这段“比特字符串”编码，只需要：
每次读取7位，并 根据 如图示的ASCII编码表 来把它转化成为字符。

在这种标准的编码下，只出现一次的D 和 出现了5次的A 所需要的比特数会是一样的。

霍夫曼压缩的思想是：
#1 使用较少的比特 来 表示 出现频繁的字符；
#2 使用较多的比特 来 表示 偶尔出现的字符 来 节省空间。
这样，字符串所需要使用的总比特数 就会降低。
