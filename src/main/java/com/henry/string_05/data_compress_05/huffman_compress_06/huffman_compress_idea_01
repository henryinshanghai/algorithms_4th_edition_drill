===
霍夫曼压缩

我们 现在来学习一种 能够大幅压缩“自然语言文件”（以及 许多 其他类型文件）空间的 数据压缩技术。

它的主要思想 放弃 文本文件的 普通保存方式：
不再使用 7位或者8位二进制数 来 表示 每一个字符，
而是
    #1 使用 较少的比特 来 表示 出现频率高的字符；
    #2 而使用 较多的比特 来 表示 出现频率低的字符。

为了 说明 这个概念，我们 先来看一个 简单的示例。
假设需要 对 字符串A B R A C A D A B R A ! 进行编码。
如果 使用 7位的ASCII字符 编码，我们可以得到 如下 比特字符串👇
略

现在想要 把 这段“比特字符串” 解码，只需要：
每次 读取7位，并 根据 如图示的ASCII编码表 来 把 它 转化成为 字符。

在 这种标准的编码 下，只出现一次的D 和 出现了5次的A 所需要的比特数 会是一样的。

霍夫曼压缩的思想 是：
#1 使用 较少的比特 来 表示 出现频繁的字符；
#2 使用 较多的比特 来 表示 偶尔出现的字符 来 节省空间。
这样，字符串 所需要使用的 总比特数 就会降低。
