这个世界 充满了数据，而 能够 有效表达（express）数据的算法，在 现代计算机基础架构 中，有着 重要的地位。
压缩（compress）数据的原因 主要有两点：
#1 节省 保存（save）信息 所需要的空间（space）；
#2 节省 传输（transmission）信息 所需要的时间（time）。

尽管 科技在发展，但是 这两点的重要性 并没有发生变化，
如今 任何需要 大量存储空间 或者 长时间 等待下载任务完成 的人，都会意识到 数据压缩的重要性。

当你在 处理数字图像、声音、电影和其他各种数据 的时候，你就已经 在 与 数据压缩 打交道了。

我们 将要学习的算法 之所以 能够节省空间，是因为 大多数数据文件 都存在有 很大的冗余（redundancy）：
比如，文本文件中，某些字符序列（character sequence）的出现频率 远远高于 其他字符串；
用来 将图片编码的 位图（bitmap）文件中，可能存在有 大片的同质区域；
保存数字图像、电影、声音等其他类似信号的文件，也都包含有 大量重复的模式（repeated pattern）。

我们 将会讨论 广泛应用的一种初级的算法 和 两种高级的算法。
这些算法的压缩效果 可能会 有所不同，具体取决于（depends on） 输入的特征。

文本数据一般都能 节省20%~50%的空间，某些情况下，能够达到50%~90%。
你将会看到，任何数据压缩算法的效果 都十分依赖于 输入的特征。

注意：本书中，我们在提到性能（performance）的时候，一般表示的都是“时间”；
而对于 “数据压缩” 的场景，性能一词 指代的是 算法的压缩率（compression ratio），当然我们 也会考虑 压缩操作的耗时。

从另一方面来说，现在的数据压缩技术 并没有以前 那么重要了，因为
计算机的存储设备的成本 已经大幅降低，普通用户 拥有的存储空间 比起以前 要多得多。

但是，现在数据压缩技术 也比任何时候 都更重要，因为现在 需要存储的数据 变得更多了。
所以 数据压缩所能够节省的空间 也就更大了。

事实上，随着互联网的出现，数据压缩 得到了 更加广泛的应用，
因为 它是 减少传输（transport）大量数据 所需要的时间 的最经济的办法。

数据压缩 有着 丰富的历史积淀（我们只会作简要介绍），
而 它在未来世界中 所扮演的角色 将会更加重要。
所有人 都能够 从 数据压缩算法的学习 中 得到益处 - 因为 这些算法 都非常经典、优雅、有趣而高效。