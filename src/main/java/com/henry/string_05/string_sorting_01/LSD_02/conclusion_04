在 许多字符串排序的应用 中（甚至对于某些州的车牌号），键的长度 可能 互不相同。
改进后的 低位优先的字符串排序 是可以 适应这些情况的，但是 我们 把 这个任务 留作练习，因为
下面将会 学习两种 专门处理”变长键“排序 的算法。

从 理论上讲，低位优先的字符串排序 意义重大，
因为它是一种 适用于一般应用的 线性时间排序算法。
无论 N有多大，它都只会 遍历W次数据。

命题B（续）：
对于 基于R个字符的字母表，由N个 以”长为W的字符串“作为键 的元素 所构成的集合，
低位优先的字符串排序 需要访问 ~7WN+3WR次数组，所使用的额外空间 与（N+R）成正比。

证明：
该方法 等价于 进行W轮“键索引计数法”，但是 aux[] 只会 被初始化一次。
根据前面的代码 和 命题A 即可得到 算法访问数组 和 使用空间 的总数量。

推论：
对于 典型的应用，R 远小于 N，因此命题B 说明 算法的总运行时间 与 W*N 成正比。
N个 “长为W的字符串”的输入 总共含有 WN个字符，因此 低位优先的字符串排序的运行时间 与 输入的规模 成正比。
