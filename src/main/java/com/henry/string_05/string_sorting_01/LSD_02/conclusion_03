在许多字符串排序的应用中（甚至对于某些州的车牌号），键的长度可能互不相同。
改进后的 低位优先的字符串排序 是可以 适应这些情况的，但是 我们把这个任务留作练习，因为
下面将会 学习两种 专门处理 变长键排序的算法。

从理论上讲，低位优先的字符串排序 意义重大，
因为它是一种 适用于一般应用的线性时间排序算法。
无论N有多大，它 都只会 遍历W次数据。

命题B（续）：
对于 基于R个字符的字母表，由N个 以长为W的字符串作为键的元素 所构成的集合，
低位优先的字符串排序 需要访问 ~7WN+3WR次数组，所使用的额外空间 与（N+R）成正比。

证明：
该方法 等价于 进行W轮 键索引计数法，但是 aux[]只会被初始化一次。
根据前面的代码 和 命题A即可得到 算法访问数组和使用空间 的总数量。

推论：
对于典型的应用，R远小于N，因此命题B 说明
算法的总运行时间 与WN成正比。
N个 长为W的字符串的输入 总共含有WN个字符，因此 低位优先的字符串排序的运行时间 与 输入的规模成正比。
