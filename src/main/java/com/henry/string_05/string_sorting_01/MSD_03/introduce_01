要实现一个 通用的字符串排序算法（字符串的长度不一定相同），我们应该考虑
从左向右遍历 所有字符。
我们知道，以a开头的字符串 应该排在 以b开头的字符串 的前面，等等。

实现这种思想的 一个很自然的方法 就是 一种被叫做 高位优先(MSD)的字符串排序算法（递归算法）。
算法步骤：
#1 首先，使用 键索引计数法 来 把 所有字符串 按照首字母排序；
#2 然后再（递归地）将 每个首字母所对应的子数组 排序（忽略 首字母，因为每一个组中，所有 字符串的首字母 都是相同的）

与 快速排序 一样，高位优先的字符串排序 会把 数组 切分为 能够独立排序的子数组 来 完成 整个数组的排序任务。
但 它的切分 会 为 每个首字母都 产生一个子数组，而不是 像快速排序一样，产生 固定的 两个或者三个切分。
