===
基本思想：长度为M的字符串 能够对应到 一个R进制的M位数。
目标：为了用一张 大小为Q的散列表 来 保存这种类型的键；
手段：需要一个 能够将 R进制的M位数 转化为 一个[0, Q-1]的int值 的散列函数。

“除留余数法”（请见3.4节）是一个 很好的选择：也就是 把 原始数字 除以Q（除数Q就是散列表的大小）并 取余。
在实际应用中，会使用一个 随机的素数Q：在 不溢出 的情况下，选择一个 尽可能大的值。
（因为我们 并不会真的需要 一张散列表。）

理解这个方法的 最简单的办法 就是: 取一个较小的Q 和 R=10的情况，如下所示。

如果想要 在文本 3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 中，找到模式 2 6 5 3 5,
首先：#1 要选择一个 散列表的大小Q（在这个例子中是997），则：26535 % 997 = 613，
然后：#2 计算文本中 所有“长度为5个数字的子字符串” 的散列值，
并 #3 寻找匹配。

在这个例子中，在找到613的匹配之前，得到的散列值 分别为508、201、715、971、442和929，如图。
图略