===
基本思想

长度为M的字符串 对应着 一个R进制的M位数。
目的：为了用一张 大小为Q的散列表 来 保存这种类型的键...
手段：需要一个 “能够将 R进制的M位数 转化为 一个[0, Q-1]的int值” 的散列函数。

除留余数法（请见3.4节）是一个很好的选择：将该数 除以Q并取余。
在实际应用中，会使用一个 随机的素数Q，在不溢出的情况下，选择一个尽可能大的值。
（因为我们并不会真的需要 一张散列表）

🐖 所以取余操作的作用：#1 把原始数字变小； #2 能够使用余数 来 唯一地区分原始数字。

理解这个方法的 最简单的办法 就是: 取一个较小的Q 和 R=10的情况，如下所示。

如果想要 在文本 3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 中，找到模式 2 6 5 3 5,
首先 #1 要选择 散列表的大小Q（在这个例子中是997），则：26535 % 997 = 613，
然后 #2 计算文本中 所有“长度为5个数字的子字符串” 的散列值，并
#3 寻找匹配。

在这个例子中，在找到613的匹配之前，得到的散列值 分别为508、201、715、971、442和929，如图。
图略