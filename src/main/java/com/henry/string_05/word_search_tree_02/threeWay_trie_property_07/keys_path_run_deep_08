单向分支

和单词查找树一样，我们也可以通过
#1 把键的尾字符 变成叶子节点，并
#2 在内部节点中 消除单向分支
来 提高三向单词查找树的空间利用率。

命题L 由N个随机字符串所构造出的、根结点进行了R^t向分支 且 不含有外部单向分支的
三向单词查找树中，依次插入或者查找操作 平均需要进行 约lnN~tlnR次的字符比较。

证明：这些粗略的估计 也可能由命题K的证明得到。
假设 在查找路径上，除了常数个结点（高层的几个）之外的其他所有结点 都是
由R个字符值组成的二叉查找树，因此 需要将时间成本 乘以lnR。

尽管将算法调优到最佳性能 是一个非常大的诱惑，但是我们不应该忘记三向单词查找树最吸引人的特性：
不必担心 对特定应用场景的依赖，即使是 在没有调优的情况下，它也能提供不错的性能。