我应该使用哪一种 字符串符号表的实现呢？

和字符串排序一样，我们自然也想对比一下 已经学习过的 字符串查找方法
与 第3章中所学习的通用方法。
表中总结了 已经讨论过的各种算法的重要性质（二叉查找树、红黑树、散列表的条目 来自于 第三章）。

对于特定的应用场景，这些条目具有指导意义，但并非绝对的结论。
因为 在研究符号表实现过程中，很多的因素（比如键本身的性质、混合操作的顺序等）都会产生影响。

如果空间足够，R向单词查找树的速度是最快的 - 它能够 在常数次字符比较内完成查找。
对于大型字母表，R向单词查找树所需要的空间 没办法被满足时，三向单词查找树是最佳的选择，
因为 它对”字符“的比较次数 是对数级别的，而 二叉查找树中，”键“的比较次数是对数级别的。

散列表也是很有竞争力的，但是如前所述，
它不支持 有序性的符号表操作，也不支持 扩展 字符类API的操作，比如 前缀或者通配符匹配。