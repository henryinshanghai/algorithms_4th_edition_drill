查找未命中 的 预期时间界限

假设我们 正 在单词查找树中 查找一个键，结果发现
根节点中，与 “被查找键的第一个字符” 所对应的链接 为空。
这种情况下，只需要 检查一个结点，就能够知道 “被查找的键” 在符号表中 不存在。

类似的情况 是 很常见的：
单词查找树 的最重要的性质之一 就是 —— 所有“未命中的查找”，一般都
只需要检查 很少的几个结点 就能够知道 这是一次 “未命中”的查找。

如果假设 键 都来自于 随机字符串模型（aka 字母表中 R个不同字符 出现的几率 都相同），则：可以证明 以下结论。

命题H 当 字母表大小为R 时，在 一棵 由N个随机键 所构成的单词查找树 中，“未命中查找”
平均 需要检查的结点数量 为 ~log(下标R)N。

简要证明（给 熟悉概率分析的读者）略

从 实际的角度 来说，这个结论(命题) 说明的 最重要的一点 就是，
“未命中查找”的成本 与 键的长度 无关。
比如，在一棵 由100万个随机键 所构造出的 单词查找树 中，“未命中查找” 也只需要 检查3~4个结点，
不管这些键 是 含有7个数字的 车辆拍照，还是 含有20个数字的 账号。

虽然在 实际的应用 中，真正的随机键 是 不可能出现的，
但是“随机键模型” 能够用来描述 在 一般应用场景 中，单词查找树的 相关算法中，对键的处理方式。
我们因此 能够得到一个 “合理的猜想”。

事实上，这种行为方式(??) 在实际应用中 十分常见 —— 这也是 单词查找树 被广泛应用 的一个原因。