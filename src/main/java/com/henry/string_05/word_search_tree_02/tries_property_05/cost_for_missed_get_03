查找未命中的预期时间界限

假设我们正 在单词查找树中查找一个键，结果发现
根节点中，与“被查找键的第一个字符”所对应的链接 为空。
这种情况下，只需要检查一个结点，就能够知道 “被查找的键” 在符号表中不存在。

类似的情况是很常见的：
单词查找树的最重要的性质之一就是 - 所有“未命中的查找”，一般都
只需要 检查很少的几个结点 就能够知道这是一次“未命中”的查找。

如果假设 键都来自于随机字符串模型（aka 字母表中R个不同字符出现的几率都相同），则：可以证明以下结论。

命题H 当字母表大小为R时，在一棵 由N个随机键构成的单词查找树中，“未命中查找”
平均需要检查的结点数量 为~log(下标R)N。

简要证明（给熟悉概率分析的读者）略

从实际的角度来说，这个结论(命题)说明的最重要的一点就是，
“未命中查找”的成本 与 键的长度无关。
比如，在一棵由100万个随机键构造出的单词查找树中，“未命中查找”也只需要检查3~4个结点，
不管这些键 是  含有7个数字的车辆拍照，还是 含有20个数字的账号。

虽然在实际的应用中，真正的随机键 是不可能出现的，
但是“随机键模型” 能够用来描述 在一般应用场景中，单词查找树相关算法中，对键的处理方式。
我们因此能够得到一个 “合理的猜想”。

事实上，这种行为方式(??)在实际应用中十分常见 - 这也是单词查找树被广泛应用的一个原因。