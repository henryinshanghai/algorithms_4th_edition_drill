获取 所有键 时：
#1 由于 不知道 “键 在单词查找树中 的具体路径”，所以 只能用for循环 不停地遍历 所有链接对应的子树；
#2 为了 在 路径 达到 “键的尾字符对应的结点” 时，能够得到 键字符串本身。
    我们 需要使用 一个“当前路径字符串（prefixStr/characterConcatenateOfCurrentPath）”  来 不断拼接 “字母表中的当前字符”；
#3 我们需要 不断进行查找 直到 路径 终止于null，这表示 已经查找到了 单词查找树的叶子节点；

获取 “匹配模式字符串的键 ”时：
#1 由于 “当前待匹配的字符” 是 已知的，因此 只需要查看 该字符所对应的子树 即可；
#2 同样地，我们需要 一个“当前路径字符串” 来 表示 “可能存在的键”；
#3 对于 “模式字符串的当前字符”，只要其 在单词查找树中 所对应的链接 不为null，则：该字符 匹配成功；
    如果 “模式字符串的最后一个字符” 匹配成功 && “路径字符串”长度 等于 “模式字符串” && 尾字符 所对应的结点 包含value，则：找到匹配的键；
    如果 “与模式字符串匹配成功”，但是 结点 没有 对应value，则：不存在 对应的键 - 不用再 继续查找，直接return。
