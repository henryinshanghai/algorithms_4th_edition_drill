在 NFA 中，从一个状态 转移到 另一个状态的规则 也与DFA中不同。
    在 NFA 中 状态的转换 有 以下两种方式👇
    #1 如果 当前状态上的字符 是一个 字母字符，且 文本中的当前字符 与 该字符 相匹配，则：
        自动机 可以 扫过 文本中的该字符 并（经由黑色的边）转换到 下一个状态。
        🐖 我们把这种转换 成为 “匹配转换”。

    #2 如果 当前状态上的字符 不是一个 字母字符，则：
        自动机 可以 不用扫描 文本中的任何字符，并（经由红色的边） 转换到 另一个状态。
        🐖 我们 将这种转换 成为 “∈转换” - 也就是说 它所对应的“匹配” 是一个 空字符串∈。

图略
找到 与 ((A*B|AC)D)正则表达式的NFA 相匹配的模式👆

例如，假设输入为 A A A A B D 并 启动 正则表达式 ((A*B|AC)D) 所对应的自动机（起始状态为0）.
上图 显示的是 经过 一系列状态转换 最终到达了 接受状态。

这一系列的转换 说明 输入文本 是属于 正则表达式 所描述的字符串集合 之中的，
也就是说 文本和模式 是 相互匹配的。

从NFA的视角/按照NFA的方式，我们称 该NFA 识别了 这段文本。