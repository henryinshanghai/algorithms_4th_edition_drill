===
正则表达式的可能性

理论计算机科学的 第一堂入门课程 就是
找出 正则表达式 所能够指定的 语言集合。
比如，你可能会感到意外的 是，正则表达式 能够实现 取余操作：
例如 (0 | 1(01*0)*1)* 描述的 所有 由0和1组成的字符串 都是 3的倍数的二进制表示！
也就是说，11、110、1001和1100 都 在这个语言之中，
而10、1011和10000 都不在。

===
局限

并不是所有的语言 都可以使用 正则表达式 来定义的。
一个令人深思的示例就是 不存在 能够描述 所有合法正则表达式字符串的集合 的 正则表达式。

这个示例的简单版本 包括：
#1 无法使用 正则表达式 检查 括号 是否匹配完整；
#2 以及 检查字符串中的 A和B的数量 是不是一样多；

这些例子都只是 冰山一角。
正则表达式 是 计算性基础设施 中 非常实用的一部分，
对于帮助我们 理解计算的本质 起到了 重要的作用。

和 KMP算法 一样，下面 将要描述的算法 也是 在 探索这个理论过程 中的副产品。