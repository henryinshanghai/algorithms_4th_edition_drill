命题F 对于一幅有向无环图，它的拓扑排序 即为 所有顶点的逆后序排列/逆后序遍历所得到的结点序列。

证明：
对于任意的边 v->w,在调用dfs(v)的时候，下面三种情况 必然有一个成立。
#1 dfs(w) 已经被调用过，并且已经返回了；
    这说明 结点w已经被处理完成了（节点本身被标记 & 由此结点指向的所有其他子节点都被标记）
#2 dfs(w) 还没有被调用过，
    这说明 结点w还没有被标记，因此 v->w会直接或间接地 调用并返回dfs(w),
    并且 dfs(w) 会在 dfs(v)返回 之前就返回。
#3 dfs(w) 已经被调用过，但是还没有返回。
    证明的关键在于，在有向无环图中，这种情况是不可能出现的。
    证明：对应的递归调用链 意味着 存在w->v的路径，aka，v->w存在有一个环。

    v->w路径上的正常的调用栈👇
        dfs(v)调用开始
            dfs(w)调用开始
                ...
            dfs(w)调用完成
        dfs(v)调用完成

    如果出现了#3的情况，则意味着：路径中存在有 w->v的路径，这表明v->w存在有一个环。

在两种可能的情况中，dfs(w)都会 在dfs(v)之前完成，所以：
在后序排列中（结点完成的顺序），w排在v之前；
而在逆后序排列中，w排在v之后（v->w）；而这正是我们所需要的

综上，任意的一条边 v->w，都如我们所愿地 从排名较前的顶点 来指向 排名较后的顶点。
aka 逆后序排列的序列 即满足 图的拓扑排序；