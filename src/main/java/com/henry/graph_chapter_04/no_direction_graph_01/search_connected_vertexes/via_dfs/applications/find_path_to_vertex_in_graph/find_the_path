单点路径问题：
    给定一幅图 与 一个起点s，问：从 起点s 到 给定的顶点v 之间 是否存在 一条路径，如果有的话，打印出 任意一条路径。
注：path(s->v) 可能存在有 多条路径，这里 只需要找到 其中的一条路径 即可

但是要 怎么记录下 一条路径呢？
手段1：一个链表，用 链表中的每一个节点 来 存储路径中的一个顶点。
链表中 节点的指向关系 用来记录 路径中 节点的指向关系

手段2：用一个数组 来 记录 ”path中的节点之间“的相邻关系。
v-w => edgeTo[w] = v
使用 这种手段，就能够 从一个数组中 还原出 path(v->w)

针对此任务的 标准设计模式：
1 构造函数的作用：
    ① 接受 起点s 作为参数；
    ② 计算 s 到 与s相连通的节点 的路径；
2 APIs：
    获取到 从s->v的路径 - pathTo(int v) {}

代码：DepthFirstPaths