命题N Kruskal算法 计算一幅含有V个顶点 和 E条边的连通加权无向图的 最小生成树
所需要的空间 和E成正比，所需要的时间 和ElogE成正比（最坏情况）

证明
算法的实现，在构造函数中：；
#1 使用了 所有的边 来 初始化优先队列；这一步骤，成本最多为 E次比较。
#2 构造完成优先队列后，其余的部分 和Prim算法 完全相同。

优先队列中，最多可能含有E条边，也就是 所需要的空间的上限。
每次操作的成本 最多为2lgE次比较，这就是 所需要的时间上限的由来。

Kruskal算法 最多还会 进行E次connected() 和 V次 union()操作，
但是这些成本 相比于 ElogE的总时间的增长数量级 可以忽略不计。

===
与Prim算法一样，这个估计是 比较保守的，因为 算法在找到V-1条边之后 就会终止。
实际上的成本 应该 与E+E0logE成正比，其中E0是 权重小于 “最小生成树中 权重最大的边” 的 所有边的总数。

尽管有这个优势，Kruskal算法 比起 Prim算法 还是要更慢，因为
在 处理每条边 时，除了 两种算法都需要完成的 优先队列操作 外，它还需要 进行一次connect()操作。

特征：在Kruskal算法中，边是按照 权重顺序 被逐个地添加到 森林中的。