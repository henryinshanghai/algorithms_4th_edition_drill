加权图：图中的边，具有一个权重（成本）的图。

应用：在这样的图中，我们会好奇怎么能够得到最小的成本。

== 图（加权无向连通图）的最小生成树 ==
图的生成树
是：一棵原始图的无环连通子图；
特征：包含有 原始图中的所有结点；

最小生成树（MST）：原始图的所有生成树中，权值（成本）最小的那个生成树。

===
约定（为了简化枝节，突出主要问题）

#1 只考虑连通图；
#2 边的权重，不一定是表示距离；
#3 边的权重，可以为0 或者 负数；
#4 所有的边的权重，都各不相同 - 🐖 这样原始图的最小生成树 才会是唯一的。

总之，我们要找到 一幅加权（权值各不相同）物象连通图的最小生成树。

==
树的基本性质：
#1 如果使用一条边来连接树中的任意两个顶点，则：会在树中产生一个新的环；
#2 如果从树中删掉任何一条边，则：将会得到两棵独立的树（孤立的结点也可以视为一棵树）。

==
得到“图的最小生成树”的基本原理 - 切分原理

图的切分：
是：对图中结点的一种分组操作；
作用：把图中所有的结点，分到 两个非空且不重叠的集合中；
概念：连接 分属于不同集合的两个结点的边，叫做 “横切边”（crossEdge）
用法：
    #1 把“图中所有的结点”视为“结点的全集”；
    #2 指定一个结点集A，
    #3 然后 图中剩余的结点集 作为 A的补集 - 这样 A与A‘就形成了 图的一个切分。
重新定义横切边：横切边 是 连接集合A中的一个结点 与 集合A’中的一个结点 的边；
表示方法：鉴于我们在对结点做分组，因此颜色标识的方法 会 非常好用。

==
切分定理（命题J）：
在一幅加权图中，对于它的任意切分结果所得到的所有横切边：
权值最小的那个横切边，必定属于 “图的最小生成树”。

证明：假设e是“权重最小的横切边”，T是“图的最小生成树”。
使用反证法：
    假设：T中不包含有e。
    基于此假设，如果现在把e添加入T中，得到的图中必定会产生一条 经过e的环（因为T中已经包含有原图中的所有结点），
    并且 这个环中至少含有 另一条横切边（??） — 设为f，f的权重必然大于e（因为e是权重最小的边 & 图中各个边的权重均不相同）。
    这样的话，如果 我们删掉f并保留e，就能够得到一棵 权重更小的生成树。
    这与假设矛盾，得证。

应用：作为 解决最小生成树问题的所有算法的基础。

==
解决 “图的最小生成树”的算法思路 - 贪心算法；
步骤：
    #1 使用切分定理 找到 最小生成树的一条边；
    #2 不断重复，直到找到 最小生成树的所有边。
🐖 这些算法相互之间的不同之处 在于 #1 保存切分的方式； #2 判定权重最小的横切边的方式。

==
一般化的命题（最小生成树的贪心算法）
为了把 含有V个顶点的任意加权连通图中，属于其最小生成树的所有边 都标记为黑色，可以使用以下步骤：
    #1 初始状态下，所有边都是灰色；
    #2 找到一种切分方式，由它所产生切分结果中，横切边都不是黑色的；
    #3 把 “当前权重最小的横切边” 标记为黑色；
    #4 重复#2+#3，直到 标记了V-1条黑色边结束。

证明（简化假设：各个边的权重各不相同）：
根据“切分定理”，所有“被标记为黑色的边”均属于 图的最小生成树。
所以，如果黑色边的数量 少于 V-1，必然仍存在 “产生的横切边不是黑色”的切分（因为图是连通的）。
只要找到了 V-1条黑色的边，则：这些边所组成的，就是 一棵最小生成树。
[强词夺理的感觉...]
