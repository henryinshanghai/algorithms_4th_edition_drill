对于二分查找的算法。有：
#1 输入模型是 大小为N的数组a[];
#2 内循环 是一个 while循环中的所有语句；
#3 成本模型 是比较操作（比较两个数组元素的值）。

对于白名单算法，有：
#1 输入模型 是白名单的大小 和 由标准输入得到的M个整数，且假设 M >> N;
#2 内循环 是一个while循环中的所有语句；
#3 成本模型 是比较操作(来自于二分查找)。
从对二分查找的分析，可以得到 对白名单问题的分析 —— 比较次数最多为 M(lgN+1)

结论：白名单问题计算所需时长的增长数量级 最多为MlgN;
分析如下：
#1 如果N很小，则：输入-输出可能会成为主要成本；
#2 具体比较的次数取决于输入——在~M 到 ~MlgN之间，具体取决于一下两点：
    #1 标准输入中存在有多少整数在白名单中；
    #2 二分查找需要多久才能找出它们（一般是~MlgN）;
#3 假设Arrays.sort()的成本远小于 MlgN。
    🐖 Arrays.sort()方法所使用的是 归并排序算法，算法的运行时长增长数量级为 NlogN.

结论：该模型支持了我们做出的假设 - 当M与N很大是，二分查找算法也能够完成计算。
推论：
    #1 如果标准输入流的长度加倍，则：运行时长也会加倍；
    #2 如果白名单的大小加倍，则：运行时长只会稍稍增加。

结论：理解特定的数学模型对于理解基础算法的运行效率是非常有用的。

===
数学分析中广泛使用的函数
#1 向下取整
#2 向上取整
#3 自然对数
#4 以2为底的对数
#5 以2为底的整型对数
#6 调和级数
#7 阶乘

算法分析中常用的近似函数
#1 调和级数求和 1+1/2+1/4+...+1/N ~ lnN
#2 等差数列求和 1+2+3+4+...+N ~ N²/2
#3 等比数列求和 1+2+4+8+...+N=2N-1 ~ 2N(其中N=2的n次方)
#4 惠特灵公式  lgN!=lg1+lg2+lg3+...+lgN ~ NlgN
#5 二项式系数    ???
#6 指数函数     ???


