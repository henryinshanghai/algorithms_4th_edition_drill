我们在实现算法的时候使用了几种  结构性的原语（普通语句、条件语句、循环、嵌套语句和方法调用）。
因此 成本增长的数量级 一般都是 问题规模N的若干函数之一

===
对增长数量级的常见假设

#1 常数级别；
    特征：完成任务所需要的操作次数是固定的，不依赖于N - 因此运行时长也不依赖于N

#2 对数级别
    经典例子：二分查找

#3 线性级别
    特征：一般会处理输入中的所有元素；
    常见例子：for循环

#4 线性对数级别
    经典例子：归并排序 与 快速排序

#5 平方级别
    常见例子：嵌套的for循环

#6 立方级别
    常见例子：三层嵌套的for循环

#7 指数级别
    特征：非常慢，不可能用于解决大型的问题

应用：我们学习的一大部分算法都非常简单，我们可以使用以上的某种增长数量级函数 来 精确地描述。
具体做法：我们能够在某个成本模型下，提出准确的命题。
例子：
    归并排序所需要的比较次数在 1/2NlgN-NlgN之间。由此可知，归并排序所需要的运行时长的增长数量级是线性对数的。
简化：归并排序是线性对数的。

